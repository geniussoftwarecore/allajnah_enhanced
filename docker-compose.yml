version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: complaints_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: complaints_db
      POSTGRES_USER: complaints_user
      POSTGRES_PASSWORD: complaints_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U complaints_user -d complaints_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: complaints_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: complaints_api
    restart: unless-stopped
    environment:
      FLASK_APP: main.py
      FLASK_ENV: production
      DATABASE_URL: postgresql://complaints_user:complaints_password_2024@db:5432/complaints_db
      SESSION_SECRET: ${SESSION_SECRET:-change-this-secret-key-in-production-12345}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET: complaints-uploads
      CORS_ORIGINS: http://localhost:5173,http://localhost:80
    ports:
      - "8000:8000"
    volumes:
      - ./complaints_backend/src/uploads:/app/complaints_backend/src/uploads
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: complaints_web
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      - api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
